language: cpp

matrix:
  include:
    - os: linux
      addons:
        apt:
          update: true
          sources:
            - sourceline: 'ppa:mhier/libboost-latest'
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-9
            - g++-9
            #- boost-latest
            - boost1.70
            - libaio-dev
            #- cmake
            #- cmake-data
            - libxslt1.1
            - python-lxml     # Use Python2
            - doxygen
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
     - os: linux
      addons:
        apt:
          update: true
          sources:
            - sourceline: 'ppa:mhier/libboost-latest'
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
            - deadsnakes # for python3
          packages:
            - gcc-9
            - g++-9
            - boost1.70
            - libaio-dev
            - libxslt1.1
            - python3.7       # Use Python3
            - python3-lxml
            - doxygen
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"

before_install:
  - eval "${MATRIX_EVAL}"

before_script:
  - |
    echo "PKG_ROOT_DIR=/usr/local"                               > .cmake-args.${HOSTNAME}
    echo "WITH_THRIFT=OFF"                                      >> .cmake-args.${HOSTNAME}
    echo "ENV:BOOST_ROOT=/usr/include"                          >> .cmake-args.${HOSTNAME}
    echo "ENV:BOOST_LIBRARYDIR=/usr/lib"                        >> .cmake-args.${HOSTNAME}
    echo "WITH_ENUM_SERIALIZATION=ON"                           >> .cmake-args.${HOSTNAME}

script:
  - ${CXX} --version
  - python3 -VV
  #- find /usr/include -name '*boost*' | head -100
  #- find /usr/lib -name '*boost*' | head -100
  ############################################################################
  # Install a recent CMake (unless already installed on OS X)
  ############################################################################
  - cd ${TRAVIS_BUILD_DIR}      # Go back to the root of the project and bootstrap
  - make bootstrap toolchain=gcc generator=make build=debug
  - make jobs=$(nproc)

branches:
  only: master
